@model List<MenuItem>
@inject IMenuService _menuService
@{
    var userRole = User.IsInRole("admin") ? "admin" :
                  User.IsInRole("instructor") ? "instructor" :
                  User.IsInRole("student") ? "student":
                  User.IsInRole("Root Admin") ? "Root Admin" : "";

}

@* Kullanıcı rolüne göre sidebar sınıfı belirleme *@
@{
    var sidebarClass = userRole switch
    {
        "admin" => "bg-dark text-white",
        "instructor" => "bg-success text-white",
        "student" => "bg-primary text-white",
		"Root Admin" => "bg-info text-white",
        _ => "bg-secondary text-white"
    };
}



<div class="sidebar sidebar-dark sidebar-fixed border-end" id="sidebar" @sidebarClass >
	<div class="sidebar-header border-bottom">
		<div class="sidebar-brand  ">
			<h5 class=" align-content-center pt-2">
			
				@(
				userRole switch
				{
					"admin" => "Yönetim Paneli",
					"instructor" => "Eğitmen Paneli",
					"student" => "Öğrenci Paneli",
					"Root Admin" => "Root Admin Paneli",
					_ => "Panel"
				}
				)
			</h5>

		</div>

	</div>
	


    <div class="flex-grow-1 overflow-auto">
	    <ul class="sidebar-nav" data-coreui="navigation" data-simplebar>
			 @* //Ana Menü (Model) *@
		    @foreach (var item in Model)
		    {

				//	Eğer alt menü varsa, menü grubu (nav-group) oluşturulur ve içeriği aç/kapat mekaniği eklenir.
			    if (item.SubMenuItems.Any())
			    {
				    <li class="nav-item ">
					    <a class="nav-link  text-white-50 position-relative py-3 px-3 @(item.IsSelected ? "active bg-primary" : "")"
					       data-bs-toggle="collapse" href="#@item.Name.Replace(" ", "")" role="button">
						    <i class="nav-icon  @item.Icon"></i> @item.Name
						    <i class="bi bi-chevron-down position-absolute end-0 me-3 transition-transform"></i>
					    </a>
					    <div class="collapse @(item.IsSelected || item.SubMenuItems.Any(sm => sm.IsSelected) ? "show" : "")" id="@item.Name.Replace(" ", "")">
						    <ul class="nav-item">

							    @* //Ana menünün içindeki alt menü öğeleri burada işlenir. *@
							    @foreach (var subItem in item.SubMenuItems)
							    {
								    <li class="nav-item">
									    <a class="nav-link text-white-50 py-3 px-3 @(subItem.IsSelected ? "active bg-primary" : "")" href="@_menuService.GetMenuUrl(subItem)">
										    <i class="nav-icon @subItem.Icon"></i> @subItem.Name
									    </a>
								    </li>
							    }
						    </ul>
					    </div>
				    </li>
			    }
			    else
			    {
					//Eğer alt menü yoksa, direkt menü öğesi oluşturulur.
					<li class="nav-item">
					    <a class="nav-link  @(item.IsSelected ? "active bg-primary" : "")" href="@_menuService.GetMenuUrl(item)">
						    <i class="nav-icon @item.Icon "></i> @item.Name
					    </a>
				    </li>
			    }
		    }
	    </ul>
    </div>
	
	
	<div class="sidebar-footer p-3 border-top border-light-subtle mt-auto">
        <div class="btn-group dropup w-100">
            <a class="btn btn-danger w-100" asp-controller="Member" asp-action="Logout">
                <i class="bi bi-box-arrow-right me-2"></i> Çıkış Yap
            </a>

            <button type="button" class="btn btn-outline-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                <span class="visually-hidden">Toggle Dropdown</span>
            </button>

            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item bg-dark-subtle text-white" asp-controller="Member" asp-action="UserEdit">
                        <i class="bi bi-person-gear me-2"></i> Profil Düzenle
                    </a>
                </li>
                <li>
                    <a class="dropdown-item bg-dark-subtle text-white" asp-controller="Member" asp-action="Logout">
                        <i class="bi bi-box-arrow-right me-2"></i> Çıkış Yap
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>

